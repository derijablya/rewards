
services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - .docker/redis:/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 5

  db:
    image: postgres:16-alpine
    env_file:
      - .env
    volumes:
      - .docker/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/usr/src/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy

  celery:
    build: .
    command: celery -A rewards worker -l info
    env_file:
      - .env
    volumes:
      - ./:/usr/src/app
    depends_on:
      - redis
      - db

  celery-beat:
    build: .
    command: celery -A rewards beat -l info
    env_file:
      - .env
    volumes:
      - ./:/usr/src/app
    depends_on:
      - redis
      - db
